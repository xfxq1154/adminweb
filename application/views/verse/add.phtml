<style>
    #view_img div{
        float: left;
        margin: 0 5px 0 0;
    }

    #view_img {
        margin: 5px 0 0 0;
        overflow: hidden;
    }

    #view_img div span, #view_img div img {
        display: block;
    }

    #view_img div span {
        text-align: center;
        padding: 3px 0;
    }
</style>
<div class="dux-tools">
    <div class="bread-head">金句管理<span class="small">添加金句</span>

        <div class="float-right">
            <a class="button button-small bg-main icon-list" href="/verse/index">金句列表</a>
        </div>

    </div>
</div>
<div class="admin-main">
    <form method="post" class="form-x dux-form form-auto" id="form" action="/verse/add">
        <div class="tab dux-tab">
            <div class="panel dux-box  active">
                <!-- tab head start-->
                <div class="panel-head">
                    <div class="tab-head">
                        <strong>金句添加配置</strong>
                        <ul class="tab-nav">
                            <li class="active"><a href="#tab-1">添加金句</a></li>
                        </ul>
                    </div>
                </div>
                <!-- tab head end -->

                <!-- table body start-->
                <div class="tab-body">

                    <!-- tab 1 start -->
                    <div class="tab-panel active" id="tab-1">

<!--                        来源-->
                        <div class="form-group">
                            <div class="label">
                                <label>金句来源(于哪本书) * </label>
                            </div>
                            <div class="field">
                                <input type="text" class="input" style="width:220px;" id="source" name="source" size="60" datatype="*" placeholder="金句来源(于哪本书)">
                                <div class="input-note">请填写金句来源(于哪本书)</div>
                            </div>
                        </div>

<!--                        内容-->
                        <div class="form-group">
                            <div class="label">
                                <label>内容 * </label>
                            </div>
                            <div class="field">
                                <textarea class="input" id="content" name="content" rows="3" cols="62" datatype="*"></textarea>
                                <div class="input-note">请填写内容</div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="label">
                                <label>关联电子书</label>
                            </div>
                            <div class="field">
                                <button class="button bg-main" type="button" id="relation_book">关联电子书</button>
                                <div id="view_img">

                                </div>
                            </div>
                        </div>

<!--                        状态 0 不显示 1 显示-->
                        <div class="form-group">
                            <div class="label">
                                <label>状态 * </label>
                            </div>
                            <div class="field">
                                <div class="button-group radio">
                                    <label class="button">
                                        <input name="state" value="1" type="radio" datatype="*" />
                                        <span class="icon icon-check text-green"></span> 显示
                                    </label>

                                    <label class="button">
                                        <input name="state" value="0" type="radio" datatype="*" />
                                        <span class="icon icon-check text-green"></span> 不显示
                                    </label>

                                </div>
                            </div>
                        </div>

                    </div>
                    <!-- tab 1 end -->

                </div>
                <!-- table body end-->

                <div class="panel-foot">
                    <div class="form-button">
                        <div id="tips"></div>
                        <button class="button bg-main" type="submit">保存</button>
                        <button class="button bg" type="reset">重置</button>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>
<script>

    !function ($) {

        $.fn.loadView = function(options) {

//            默认配置
            var defaultOpt = {
                'ev': 'click',
                'bgStyle': {
                    'position': 'absolute',
                    'width': '100%',
                    'height': '100%',
                    'left': 0,
                    'top': 0,
                    'backgroundColor': '#000',
                    'opacity': '0.5'
                },
                'mode': 'center',
                'anime': 'fast',
                'box': {
                    'position': 'absolute',
                    'background': '#fff',
                    'width': '500px',
                    'height': '300px'
                },
                'ajaxOpt': {
                    'url': '/book/ajaxbooklist',
                    'type': 'GET',
                    'dataType': 'json'
                },
                'pageer': '.pagination a',
                'addBtn': '.icon-plus',
                'disableBtn': 'bg-gray',
                'activeBtn': 'bg-green',
                'isMultiSelect': true,

            };

            var vObj = {

                'aVal': [],
                'oBg': $('<div id="view_bg"></div>'),
                'oBox': $('<div id="view_box"></div>'),
                'searchVal': {},
                'url': '',
                'aImg': {},
                'oImg': $('<div id="view_img"></div>'),

            };

//            继承配置
            options = $.extend(true, defaultOpt, options);

//            获取当前对象
            var _this = this;

//            设置模式
            switch (options.mode) {
                case 'center':
                    var iLeft = ($(document).width() -  parseInt(options.box.width)) / 2;
                    var iTop = ($(document).height() -  parseInt(options.box.height)) / 2;

                    options.box.left = Math.ceil(iLeft) + 'px';
                    options.box.top = Math.ceil(iTop) + 'px';
                    break;
//                TODO 增加全屏属性
                case 'full':
                    break;
            }

//            ajax setting
            var ajaxGetView = function () {
//                设置参数

                if (typeof(vObj.url) == "undefined") {
                    return false;
                }

                var p = 1;
                if (vObj.url != '') {
                    var aParseUrl = vObj.url.split('/');
                    p = aParseUrl[4];
                }

                options.ajaxOpt.data = $.extend({'p': p}, vObj.searchVal);

//                ajax
                $.ajax(
                    options.ajaxOpt
                ).done(function (data) {
                        vObj.oBox.html(data.template);

                        // 设置img预览
                        prevImg();
//                        设置状态
                        setAddBtnState();
                    }).fail(function () {
                        console.log('fail');
                    });
            };

//            绑定事件
            $(_this).on(defaultOpt.ev, function () {

//                判断是否已经创建了oBg和oBox对象
                if ($('body').find(vObj.oBg).length > 0) {
                    vObj.oBg.fadeIn(options.anime);
                    vObj.oBox.fadeIn(options.anime);
                } else {
                    vObj.oBg.css(options.bgStyle).fadeIn(options.anime);
                    vObj.oBox.css(options.box).fadeIn(options.anime);

                    $('body').append(vObj.oBg);
                    $('body').append(vObj.oBox);

                    ajaxGetView();
                    getPage();
                }
            });

//            设置添加的值
            $(document).on('click', options.addBtn, function () {
                setArrValue($(this).attr('value'));
//                设置状态
                setAddBtnState();

                if (typeof(options.showItem) == 'function') {
                    options.showItem($(this).attr('value'), vObj);
                }
            });

//            获取分页的值
            var getPage = function() {
                $(document).on('click', options.pageer, function (event) {
                    vObj.url = $(this).attr('href');

                    ajaxGetView();
                    // 阻止herf默认事件
                    event.preventDefault();
                });
            };

//            设置添加按钮的状态
            var setAddBtnState = function () {
                $(options.addBtn).each( function (i, ele) {

                    var ind = $.inArray($(ele).attr('value'), vObj.aVal);

                    if ( ind >= 0) {
                        $(ele).removeClass(options.activeBtn);
                        $(ele).addClass(options.disableBtn);

                    } else {
                        $(ele).removeClass(options.disableBtn);
                        $(ele).addClass(options.activeBtn);
                    }
                });
            };


//            设置input隐藏域
            var setInput = function () {
                if (!$('input[name="' + options.inputName + '"]').length > 0) {
                    var oInput = $('<input />');
                    oInput.attr('name', options.inputName);
                    oInput.attr('type', 'hidden');
                    $(_this).parent().append(oInput);
                    return oInput;
                } else {
                    return $('input[name="' + options.inputName + '"]');
                }
            };

//            设置input值
            var setInputValue = function () {
                var oInput = setInput();
                oInput.val(vObj.aVal.join(','));
            };

//            设置数组的值
            var setArrValue = function (iValue) {

                var ind = $.inArray(iValue, vObj.aVal);

//                是否多选
                if (!options.isMultiSelect) {
                    if (vObj.aVal.length == 1 && ind) {
                        alert('不能多选');
                        return false;
                    }
                }

                if ( ind >= 0) {
                    vObj.aVal.splice(ind, 1);
                } else {
                    vObj.aVal.push(iValue);
                }
            };

//            背景绑定事件
            $(vObj.oBg).on('click', function () {
                setInputValue();
                vObj.oBg.fadeOut(options.anime);
                vObj.oBox.fadeOut(options.anime);
            });

//            搜索
            if (typeof(options.searchBtn) != 'undefined' && typeof(options.searchInput) != 'undefined') {

                $(document).on('click', options.searchBtn, function () {

                    var param = options.searchInput;
                    vObj.searchVal[param] = $('input[name="' + options.searchInput + '"]').val();
                    vObj.url = '';
                    ajaxGetView();
                });
            }

//            预览
            var prevImg = function () {

                if (typeof(options.prevImgBtn != 'undefined')) {
                    $(options.prevImgBtn).each( function (i, ele) {

                        $(ele).parent('td').css({
                            'position': 'relative'
                        });

                        $(ele).next('img').css({
                            'position': 'absolute',
                            'left': '0px',
                            'top': '30px',
                            'width': '100px',
                            'zIndex': 999
                        });

                        $(ele).on('mouseover', function () {
                            $(this).next('img').fadeIn(options.anime);
                        });

                        $(ele).on('mouseout', function () {

                            $(this).next('img').fadeOut(options.anime);
                        });
                    });
                }
            };

            if ($('input[name="' + options.inputName + '"]').length > 0) {
                vObj.aVal = $('input[name="' + options.inputName + '"]').val().split(',');
            }
        };
    }(jQuery);

    $("#relation_book").loadView({
        'ev': 'click',
        'mode': 'center',
        'box': {
            'width': '800px',
            'height': '660px',
        },
        'inputName': 'book_id',
        'ajaxOpt': {
            'url': '/book/ajaxbooklist',
            'type': 'GET',
            'dataType': 'json'
        },
        'searchBtn': '.search',
        'searchInput': 'search_title',
        'pageer': '.pagination a',
        'addBtn': '.icon-plus',
        'disableBtn': 'bg-gray',
        'activeBtn': 'bg-green',
        'prevImgBtn': '.previmg',
        'showItem': function (id, vObj) {

            var oImg = $('.prve_img_' + id).find('img');
            var src = oImg.attr('src');
            var title = oImg.attr('title');
            if ($.inArray(id, vObj.aVal) >= 0) {
                $('#view_img').append('<div class="addImg_' + id + '"><img width="100" src="' + src + '"><span>' + title +'<span></div>');
            } else {
                $('.addImg_' + id).remove();
            }
        }
    });
</script>